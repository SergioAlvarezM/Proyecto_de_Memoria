"""
File that contains the functions to read files in NetCDF4 format.
"""
import logging as log
import numpy as np
from netCDF4 import Dataset

# Variables to use to check for data in the netcdf files
LONGITUDE_KEYS = ['x', 'lon']
LATITUDE_KEYS = ['y', 'lat']
HEIGHT_KEYS = ['z']


def get_variables_from_grp(grp, key_values: list) -> list:
    """
    Get the list of values from a grp object.

    Args:
        key_values: Possible key values to search for
        grp: Grp object generated by the netcdf4 library

    Returns: List with values
    """
    grp_keys = grp.variables.keys()

    # Check for the key to be in the object
    for key in key_values:
        if key in grp_keys:
            return grp.variables[key]

    raise KeyError("grp object does not have a key listed in the possible key values list")


def read_info(file_name: str):
    """
    Extract the information of X, Y and Z from a NetCDF4 file.

    Args:
        file_name (str): Filename to analyze.

    Returns:
        np.array, np.array, np.array: Values of the variables X, Y
                                      and Z in the file.
    """
    root_grp = Dataset(file_name, "r", format="NETCDF4")

    x = np.array(get_variables_from_grp(root_grp, LONGITUDE_KEYS))
    y = np.array(get_variables_from_grp(root_grp, LATITUDE_KEYS))
    z = np.array(get_variables_from_grp(root_grp, HEIGHT_KEYS))

    return x, y, z


if __name__ == "__main__":
    log.basicConfig(format="%(asctime)s - %(message)s", level=log.DEBUG)

    filename = "test_inputs/OF_20Ma_AHS_WORLD_NewAfrica.nc"

    rootgrp = Dataset(filename, "r", format="NETCDF4")

    log.debug("Dimensiones del archivo:")
    log.debug(rootgrp.dimensions)

    log.debug("Grupos del archivo:")
    log.debug(rootgrp.groups)

    log.debug("Variables del archivo:")
    log.debug(rootgrp.variables)

    X, Y, Z = read_info(filename)

    log.info("X values")
    log.info(X)

    log.info("Y values")
    log.info(Y)

    log.info("Z values.")
    log.info(Z)
